package com.kh.MethodEx;
/*
 메서드(Method) : 특정 행동이나 작업을 진행하는 코드 블럭 { } 이다.
   
   // Getter Setter 는 생성하고 나서 값을 임의로 변경하면 안 된다.
   
   Setter : 필드에 작성된 변수를 복제하여, 원본 변수 대신에 값을 변경하고 저장하는 메서드이다.
   	public void set 변수명(자료형 매개변수) {
   		this.변수 = 매개변수;
   	}
   
   Getter : Setter 에 저장된 변수 값을, 다른 곳에서 사용할 수 있도록 전달해주는 메서드이다.
   	public 자료형 get 변수명() {
   		return 변수명;
   	}
   	
   생성자 : 파일명(클래스명)과 똑같이 작성해주어야 하고, 객체의 기본 값을 설정하거나, 값을 각각 변경해서 사용할 때 쓰이는 메서드이다.
   	
   	기본 : 매개변수가 없어도 되는 생성자 / 필수로 작성해야 하는 것이 없다.
   	 public 클래스명() {}
   	
   	필수 : 매개변수(중간에 개입하여 값을 변경하는 변수) 가 필수로 존재해야 하는 생성자로, 필수로 존재했으면 하는 값을 작성한다.
   	 public 클래스명(자료형 매개변수, 자료형 매개변수2) {
   	 	this.변수명 = 매개변수;
   	 	this.변수명2 = 매개변수2;
   	 }
   	     예를 들어, 회원가입을 진행할 때, 이름 나이는 필수로 입력받고,
   	     결혼기념일 광고수신동의는 선택에 맡기겠다면, 이름 나이를 필수로 ( ) 안에 작성한다. 
   	     public 클래스명 (String 이름, String 나이) {
   	     	this.이름 = 이름;
   	     	this.나이 = 나이;
   	     }
   	     
   void : 어떤 행동을 수행하기 위해 작성하고, 수행한 다음 특별히 전달할 내용이 없을 때 사용한다.
   		  void 는 vocare 라는 라틴어에서 파생된 단어로, 보이다 비어있다 라는 뜻을 가지고 있다.
   		  특정 행동을 하고 난 다음, 행동을 끝내는 것이지, 값을 전달하거나, 추가로 어떤 행동을 하지 않을 때 사용한다.
   
      예제
   	   public void 특정행동이름 () { 
   	   	// 행동하거나, 보여주고 싶은 내용을 작성하면 된다.
   	   }
   	   
   	   public void 특정행동이름 (매개변수) {
   	   	// 행동하거나, 보여주고 싶은 내용을 작성하면 된다.
   	   }
   
   return : 어떤 행동을 실행하고, 행동을 한 다음에 행동에 대한 결과를 필요한 곳에 전달하는 메서드이다.
   			메서드를 작성할 때, 컴퓨터에게 어떤 자료형인지(공간을 얼마나 줘야 하는지) 를 전달해주고,
   			처음에 작성한 자료형과 마지막에 전달할 자료형이 동일해야 한다.
   			
   	  예제
   	   public 자료형 특정행동이름 () { 
   	   	return 자료형;
   	   }
   	   
   	   public 자료형 특정행동이름 (매개변수) {
   	   	return 자료형;
   	   }
   			
 		 // 문자열을 전달 : String
 		  public String 특정행동1() {
 		  	return "안녕하세요"; // 위에 이미 String 을 작성했으니, return 값도 String 형식으로 작성해야 한다.
 		  }
 		  	
 		  public int 특정행동2() {
 		  	return 1; // public 옆에 이미 int 를 작성했으니, return 값도 숫자값으로 작성해야 한다. 
 		  }
 		  
   main : 최종 출력 및 실행할 내용만 작성하는 메서드이다.
   	public static void main(String[] args) {
   		// 여기에 최종 출력 및 실행할 내용만 작성해준다.
   	}
 */
public class 기본메서드 {

}
